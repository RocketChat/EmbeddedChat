"use strict";(self.webpackChunk_embeddedchat_ui_elements=self.webpackChunk_embeddedchat_ui_elements||[]).push([[308],{"./src/components/MultiSelect/MultiSelect.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Default:()=>Default,__namedExportsOrder:()=>__namedExportsOrder,default:()=>MultiSelect_stories});var react=__webpack_require__("../../node_modules/react/index.js"),ThemeContextProvider=__webpack_require__("./src/context/ThemeContextProvider.js"),DefaultTheme=__webpack_require__("./src/theme/DefaultTheme.js"),prop_types=__webpack_require__("../../node_modules/prop-types/index.js"),prop_types_default=__webpack_require__.n(prop_types),useComponentOverrides=__webpack_require__("./src/hooks/useComponentOverrides.js"),Box=__webpack_require__("./src/components/Box/index.js"),Icon=__webpack_require__("./src/components/Icon/index.js"),ListBox=__webpack_require__("./src/components/ListBox/ListBox.js"),emotion_react_browser_esm=__webpack_require__("../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js");var _ref={name:"1gbu9vy",styles:"display:flex;flex-wrap:wrap;gap:0.5rem"},_ref2={name:"1ix3x49",styles:"display:inline-flex;flex:1 0 auto;flex-direction:column;gap:0.25rem;min-width:8rem"};const MultiSelect_styles=theme=>({main:_ref2,selectBox:(0,emotion_react_browser_esm.iv)("display:flex;cursor:pointer;justify-content:space-between;align-items:center;padding:0.5rem 5rem;background-color:transparent;letter-spacing:0rem;font-size:0.875rem;font-weight:400;line-height:1.25rem;color:",theme.colors.foreground,";border-width:1px;border-color:",theme.colors.border,";border-style:solid;border-radius:",theme.radius,";background-color:",theme.colors.background,";",""),clickStyle:(0,emotion_react_browser_esm.iv)("border-color:",theme.colors.ring,";",""),disabled:(0,emotion_react_browser_esm.iv)("cursor:not-allowed!important;color:",theme.colors.mutedForeground,";",""),selectedItemsContainer:_ref,selectedItems:(0,emotion_react_browser_esm.iv)("background:",theme.colors.muted,";padding:0.2rem;display:flex;justify-self:flex-start;gap:0.2rem;","")});var hooks=__webpack_require__("./src/hooks/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(target){for(var i=1;i<arguments.length;i++){var source=arguments[i];for(var key in source)Object.prototype.hasOwnProperty.call(source,key)&&(target[key]=source[key])}return target},_extends.apply(this,arguments)}const MultiSelect=({className="",style={},options=[],value,placeholder="",disabled=!1,onChange,...props})=>{const{classNames,styleOverrides}=(0,useComponentOverrides.Z)("MultiSelect"),{theme}=(0,hooks.Fg)(),styles=MultiSelect_styles(theme),[internalValue,setInternalValue]=(0,react.useState)([]),[isOpen,setIsOpen]=(0,react.useState)(!1),multiSelectRef=(0,react.useRef)(null);(0,react.useEffect)((()=>{setInternalValue(value||[])}),[value]),(0,react.useEffect)((()=>{const handleClickOutside=event=>{isOpen&&multiSelectRef.current&&!multiSelectRef.current.contains(event.target)&&setIsOpen(!1)};return document.addEventListener("click",handleClickOutside),()=>{document.removeEventListener("click",handleClickOutside)}}),[isOpen]);return(0,emotion_react_browser_esm.tZ)(Box.x,{className:`ec-multi-select ${className} ${classNames}`,style:{...styleOverrides,...style},ref:multiSelectRef,css:styles.main},(0,emotion_react_browser_esm.tZ)(Box.x,_extends({onClick:()=>{disabled||setIsOpen(!isOpen)},css:[styles.selectBox,isOpen&&styles.clickStyle,disabled&&styles.disabled,"",""]},props),(0,emotion_react_browser_esm.tZ)(Box.x,{css:styles.selectedItemsContainer},internalValue.length>0?internalValue.map(((item,index)=>(0,emotion_react_browser_esm.tZ)(Box.x,{is:"span",key:index,css:styles.selectedItems},options.find((option=>option.value===item))?.label||item))):(0,emotion_react_browser_esm.tZ)(Box.x,{is:"span"},placeholder)),(0,emotion_react_browser_esm.tZ)(Icon.J,{name:"chevron-down"})),isOpen&&(0,emotion_react_browser_esm.tZ)(ListBox.Z,{options,onSelect:val=>{if(internalValue.includes(val)){const newValue=internalValue.filter((item=>item!==val));setInternalValue(newValue),onChange(newValue)}else{const newValue=[...internalValue,val];setInternalValue(newValue),onChange(newValue)}},value:internalValue,multi:!0}))};MultiSelect.displayName="MultiSelect",MultiSelect.propTypes={className:prop_types_default().string,style:prop_types_default().object,options:prop_types_default().arrayOf(prop_types_default().shape({value:prop_types_default().string,label:prop_types_default().string})),value:prop_types_default().array,placeholder:prop_types_default().string,disabled:prop_types_default().bool,onChange:prop_types_default().func.isRequired},MultiSelect.__docgenInfo={description:"",methods:[],displayName:"MultiSelect",props:{className:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},style:{defaultValue:{value:"{}",computed:!1},description:"",type:{name:"object"},required:!1},options:{defaultValue:{value:"[]",computed:!1},description:"",type:{name:"arrayOf",value:{name:"shape",value:{value:{name:"string",required:!1},label:{name:"string",required:!1}}}},required:!1},placeholder:{defaultValue:{value:"''",computed:!1},description:"",type:{name:"string"},required:!1},disabled:{defaultValue:{value:"false",computed:!1},description:"",type:{name:"bool"},required:!1},value:{description:"",type:{name:"array"},required:!1},onChange:{description:"",type:{name:"func"},required:!0}}};const MultiSelect_MultiSelect=MultiSelect,MultiSelect_stories={title:"Components/MultiSelect",component:MultiSelect_MultiSelect},Default={args:{options:[{value:"option1",label:"Option 1"},{value:"option2",label:"Option 2"},{value:"option3",label:"Option 3"}],placeholder:"Select options...",value:"",disabled:!1},render:args=>(0,emotion_react_browser_esm.tZ)(ThemeContextProvider.f,{theme:DefaultTheme.Z},(0,emotion_react_browser_esm.tZ)(MultiSelect_MultiSelect,args))};Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:"{\n  args: {\n    options: [{\n      value: 'option1',\n      label: 'Option 1'\n    }, {\n      value: 'option2',\n      label: 'Option 2'\n    }, {\n      value: 'option3',\n      label: 'Option 3'\n    }],\n    placeholder: 'Select options...',\n    value: '',\n    disabled: false\n  },\n  render: args => <ThemeProvider theme={DefaultTheme}>\n      <MultiSelect {...args} />\n    </ThemeProvider>\n}",...Default.parameters?.docs?.source}}};const __namedExportsOrder=["Default"]}}]);